package gui;

import java.awt.*;
import javax.swing.*;
import javax.swing.border.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import customcomponent.PillButton;
import customcomponent.PlaceholderSupport;
import customcomponent.RoundedBorder;

import dao.SanPham_DAO;
import dao.LoSanPham_DAO;
import dao.KhachHang_DAO;
import dao.HoaDon_DAO; // üí° TH√äM DAO
import dao.ChiTietHoaDon_DAO; // üí° TH√äM DAO

import entity.SanPham;
import entity.LoSanPham;
import entity.TaiKhoan;
import entity.NhanVien;
import entity.Session;
import entity.KhachHang;
import entity.HoaDon; // üí° TH√äM ENTITY
import entity.ChiTietHoaDon; // üí° TH√äM ENTITY

public class BanHang_GUI extends JPanel {

	private JTextField txtTimThuoc;
	private JPanel pnDanhSachDon;

	// üí° KHAI B√ÅO C√ÅC DAO M·ªöI
	private final HoaDon_DAO hoaDonDAO = new HoaDon_DAO();
	private final ChiTietHoaDon_DAO chiTietHoaDonDAO = new ChiTietHoaDon_DAO();

	private final KhachHang_DAO khachHangDAO = new KhachHang_DAO();
	private final SanPham_DAO sanPhamDAO = new SanPham_DAO();
	private final LoSanPham_DAO loDAO = new LoSanPham_DAO();

	private JLabel lblNhanVien;

	// --- KHAI B√ÅO THU·ªòC T√çNH T·ªîNG TI·ªÄN ƒê·ªÇ C√ì TH·ªÇ C·∫¨P NH·∫¨T TR√äN GIAO DI·ªÜN ---
	private JLabel lblTongHangValue; // ƒê·ªÉ c·∫≠p nh·∫≠t "T·ªïng ti·ªÅn h√†ng:"
	private JLabel lblTongHDValue; // ƒê·ªÉ c·∫≠p nh·∫≠t "T·ªîNG C·ªòNG:"
	private JLabel lblTienThuaValue; // ƒê·ªÉ c·∫≠p nh·∫≠t "Ti·ªÅn th·ª´a:"

	// üí° Th√™m thu·ªôc t√≠nh l∆∞u Kh√°ch h√†ng ƒë∆∞·ª£c ch·ªçn
	private KhachHang khachHangHienTai = new KhachHang("KH-0001", "Kh√°ch v√£ng lai", true, "0900000000",
			LocalDate.now().minusYears(18)); // M·∫∑c ƒë·ªãnh l√† Kh√°ch l·∫ª
	private JTextField txtTienKhach; // Th√™m ƒë·ªÉ truy c·∫≠p Ti·ªÅn kh√°ch ƒë∆∞a

	public BanHang_GUI() {
		setPreferredSize(new Dimension(1537, 850));
		initialize();
	}

	/** Kh·ªüi t·∫°o giao di·ªán ch√≠nh */
	private void initialize() {
		setLayout(new BorderLayout());
		setPreferredSize(new Dimension(1537, 1168));

		// ===== HEADER =====
		JPanel pnHeader = new JPanel(null);
		pnHeader.setPreferredSize(new Dimension(1073, 88));
		pnHeader.setBackground(new Color(0xE3F2F5));
		add(pnHeader, BorderLayout.NORTH);

		// √î t√¨m ki·∫øm (s·ªë ƒëƒÉng k√Ω thu·ªëc)
		txtTimThuoc = new JTextField();
		PlaceholderSupport.addPlaceholder(txtTimThuoc, "Nh·∫≠p s·ªë ƒëƒÉng k√Ω thu·ªëc (VD: VN-12345)...");
		txtTimThuoc.setFont(new Font("Segoe UI", Font.PLAIN, 18));
		txtTimThuoc.setBounds(25, 17, 420, 60);
		txtTimThuoc.setBorder(new RoundedBorder(20));
		txtTimThuoc.setBackground(Color.WHITE);
		txtTimThuoc.setForeground(Color.GRAY);
		pnHeader.add(txtTimThuoc);

		// Khi nh·∫•n Enter s·∫Ω t√¨m thu·ªëc
		txtTimThuoc.addActionListener(e -> timSanPhamTheoSoDangKy());

		// N√∫t th√™m ƒë∆°n (ch∆∞a d√πng)
		JButton btnThemDon = new PillButton("Th√™m ƒë∆°n");
		btnThemDon.setFont(new Font("Segoe UI", Font.BOLD, 18));
		btnThemDon.setBounds(490, 30, 120, 40);
		pnHeader.add(btnThemDon);

		// ===== CENTER: DANH S√ÅCH S·∫¢N PH·∫®M =====
		JPanel pnCenter = new JPanel(new BorderLayout());
		pnCenter.setBackground(Color.WHITE);
		pnCenter.setBorder(
				new CompoundBorder(new LineBorder(new Color(0x00C853), 3, true), new EmptyBorder(5, 5, 5, 5)));
		add(pnCenter, BorderLayout.CENTER);

		pnDanhSachDon = new JPanel();
		pnDanhSachDon.setLayout(new BoxLayout(pnDanhSachDon, BoxLayout.Y_AXIS));
		pnDanhSachDon.setBackground(Color.WHITE);

		JScrollPane scrollPane = new JScrollPane(pnDanhSachDon);
		scrollPane.setBorder(null);
		scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
		pnCenter.add(scrollPane);

		// ===== C·ªòT PH·∫¢I =====
		add(buildRightPanel(), BorderLayout.EAST);
	}

	// [C√°c h√†m: timSanPhamTheoSoDangKy(), createDonPanel(), findByName(),
	// styleMiniButton(), parse()]
	// GI·ªÆ NGUY√äN c√°c h√†m n√†y t·ª´ m√£ g·ªëc (ƒë√£ ƒë∆∞·ª£c ki·ªÉm tra v√† s·ª≠a l·ªói t√≠nh t·ªïng ti·ªÅn
	// ng·∫ßm ·ªü c√°c b∆∞·ªõc tr∆∞·ªõc)

	/**
	 * T√¨m s·∫£n ph·∫©m theo SƒêK, ch·ªçn l√¥ c≈© nh·∫•t, g·ªôp n·∫øu tr√πng l√¥; ki·ªÉm tra t·ªìn & tr·ª´
	 * t·∫°m
	 */
	private void timSanPhamTheoSoDangKy() {
		String soDK = txtTimThuoc.getText().trim();
		if (soDK.isEmpty()) {
			JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p s·ªë ƒëƒÉng k√Ω thu·ªëc!");
			return;
		}

		SanPham sp = sanPhamDAO.timTheoSoDangKy(soDK);
		if (sp == null) {
			JOptionPane.showMessageDialog(this, "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m c√≥ s·ªë ƒëƒÉng k√Ω: " + soDK,
					"Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m", JOptionPane.ERROR_MESSAGE);
			txtTimThuoc.setText("");
			return;
		}

		// === 1Ô∏è‚É£ X√°c ƒë·ªãnh xem s·∫£n ph·∫©m n√†y ƒë√£ c√≥ l√¥ n√†o trong danh s√°ch ch∆∞a ===
		LoSanPham lo = null;

		// Duy·ªát t·∫•t c·∫£ panel hi·ªán c√≥, l·∫•y l√¥ cu·ªëi c√πng c·ªßa s·∫£n ph·∫©m n√†y (n·∫øu c√≥)
		for (Component comp : pnDanhSachDon.getComponents()) {
			if (!(comp instanceof JPanel pnDon))
				continue;
			Object maLoPanel = pnDon.getClientProperty("maLo");
			if (maLoPanel == null)
				continue;

			// L·∫•y m√£ s·∫£n ph·∫©m t·ª´ panel hi·ªán t·∫°i (n·∫øu b·∫°n c√≥ g√°n th√™m sau n√†y)
			// T·∫°m th·ªùi d√πng heuristic: n·∫øu c√≥ l√¥ ƒë√≥ trong DB thu·ªôc c√πng s·∫£n ph·∫©m
			LoSanPham loTmp = loDAO.layLoTheoMa((String) maLoPanel);
			if (loTmp != null && loTmp.getSanPham().getMaSanPham().equals(sp.getMaSanPham())) {
				lo = loTmp; // nh·ªõ l·∫°i l√¥ cu·ªëi c√πng ƒëang d√πng
			}
		}

		// === 2Ô∏è‚É£ N·∫øu ch∆∞a c√≥ l√¥ trong danh s√°ch ‚Üí l·∫•y l√¥ c≈© nh·∫•t c√≤n h√†ng ===
		if (lo == null) {
			lo = loDAO.layLoCuNhat(sp.getMaSanPham());
			while (lo != null && lo.getSoLuongTon() <= 0)
				lo = loDAO.layLoKeTiep(sp.getMaSanPham(), lo.getHanSuDung());
		}

		// === 3Ô∏è‚É£ N·∫øu c√≥ r·ªìi nh∆∞ng h·∫øt h√†ng ‚Üí l·∫•y l√¥ k·∫ø ti·∫øp ===
		else if (lo.getSoLuongTon() <= 0) {
			lo = loDAO.layLoKeTiep(sp.getMaSanPham(), lo.getHanSuDung());
		}

		// === 4Ô∏è‚É£ N·∫øu v·∫´n null th√¨ h·∫øt h√†ng to√†n b·ªô ===
		if (lo == null) {
			JOptionPane.showMessageDialog(this, "T·∫•t c·∫£ c√°c l√¥ c·ªßa s·∫£n ph·∫©m n√†y ƒë√£ h·∫øt h√†ng!", "H·∫øt h√†ng",
					JOptionPane.WARNING_MESSAGE);
			return;
		}

		String maLo = lo.getMaLo();
		LocalDate hsd = lo.getHanSuDung();
		int tonGoc = lo.getSoLuongTon();

		// N·∫øu ƒë√£ c√≥ l√¥ n√†y ‚Üí tƒÉng SL n·∫øu c√≤n t·ªìn
		for (Component comp : pnDanhSachDon.getComponents()) {
			if (!(comp instanceof JPanel pnDon))
				continue;
			Object maLoPanel = pnDon.getClientProperty("maLo");
			if (maLoPanel == null || !maLo.equals(maLoPanel))
				continue;

			JTextField txtSL = (JTextField) findByName(pnDon, "txtSL");
			JLabel lblTong = (JLabel) findByName(pnDon, "lblTong");
			JLabel lblTon = (JLabel) findByName(pnDon, "lblTon");

			if (txtSL == null || lblTong == null || lblTon == null)
				continue;

			int sl = parse(txtSL.getText()) + 1;
			int tonBanDau = (int) pnDon.getClientProperty("tonGoc");

			if (sl > tonBanDau) {
				// L·∫•y l√¥ k·∫ø ti·∫øp
				LoSanPham loTiep = loDAO.layLoKeTiep(sp.getMaSanPham(), lo.getHanSuDung());
				if (loTiep != null) {
					JOptionPane.showMessageDialog(this,
							"L√¥ " + maLo + " ƒë√£ h·∫øt h√†ng!\nT·ª± ƒë·ªông chuy·ªÉn sang l√¥ " + loTiep.getMaLo(),
							"T·ª± ƒë·ªông ƒë·ªïi l√¥", JOptionPane.INFORMATION_MESSAGE);

					// t·∫°o panel m·ªõi cho l√¥ k·∫ø ti·∫øp
					pnDanhSachDon
							.add(createDonPanel(sp, loTiep.getMaLo(), loTiep.getHanSuDung(), loTiep.getSoLuongTon()));
					pnDanhSachDon.revalidate();
					pnDanhSachDon.repaint();
					txtTimThuoc.setText("");
					capNhatTongTien(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn khi th√™m l√¥ m·ªõi
				} else {
					JOptionPane.showMessageDialog(this, "T·∫•t c·∫£ c√°c l√¥ c·ªßa s·∫£n ph·∫©m n√†y ƒë√£ h·∫øt h√†ng!", "H·∫øt h√†ng",
							JOptionPane.WARNING_MESSAGE);
				}
				return;
			}

			txtSL.setText(String.valueOf(sl));
			lblTong.setText(String.format("%,.0f ƒë", sl * sp.getGiaBan()));
			lblTon.setText("T·ªìn: " + (tonBanDau - sl));
			txtTimThuoc.setText("");
			capNhatTongTien(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn khi tƒÉng SL
			return;
		}

		// N·∫øu ch∆∞a c√≥ panel ‚Üí th√™m m·ªõi
		if (tonGoc <= 0) {
			JOptionPane.showMessageDialog(this, "L√¥ " + maLo + " ƒë√£ h·∫øt h√†ng!");
			return;
		}

		pnDanhSachDon.add(createDonPanel(sp, maLo, hsd, tonGoc));
		pnDanhSachDon.revalidate();
		pnDanhSachDon.repaint();
		txtTimThuoc.setText("");
		capNhatTongTien(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn khi th√™m m·ªõi
	}

	/** T·∫°o panel s·∫£n ph·∫©m, d√πng tonGoc c·ªë ƒë·ªãnh */
	private JPanel createDonPanel(SanPham sp, String maLo, LocalDate hsd, int tonGoc) {
		JPanel pnDon = new JPanel(null);
		pnDon.setPreferredSize(new Dimension(1040, 120));
		pnDon.setBackground(Color.WHITE);
		pnDon.setBorder(new MatteBorder(0, 0, 1, 0, new Color(230, 230, 230)));
		pnDon.putClientProperty("maLo", maLo);
		pnDon.putClientProperty("tonGoc", tonGoc);

		int centerY = 120 / 2;

		// ==== ·∫¢NH ====
		JLabel lblHinh = new JLabel("", SwingConstants.CENTER);
		lblHinh.setBounds(27, centerY - 30, 100, 100);
		lblHinh.setBorder(new LineBorder(Color.LIGHT_GRAY));
		try {
			ImageIcon icon = new ImageIcon(getClass().getResource(sp.getHinhAnh()));
			lblHinh.setIcon(new ImageIcon(icon.getImage().getScaledInstance(80, 80, Image.SCALE_SMOOTH)));
		} catch (Exception e) {
			lblHinh.setText("·∫¢nh");
		}
		pnDon.add(lblHinh);

		// ==== T√äN ====
		JLabel lblTen = new JLabel(sp.getTenSanPham());
		lblTen.setFont(new Font("Segoe UI", Font.BOLD, 20));
		lblTen.setBounds(168, centerY - 30, 300, 34);
		pnDon.add(lblTen);

		// ==== L√î / HSD / T·ªíN ====
		JLabel lblLo = new JLabel("L√¥: " + maLo);
		lblLo.setBounds(168, centerY + 12, 150, 25);
		pnDon.add(lblLo);

		JLabel lblHsd = new JLabel("HSD: " + (hsd != null ? hsd.toString() : "--"));
		lblHsd.setBounds(310, centerY + 12, 120, 25);
		pnDon.add(lblHsd);

		JLabel lblTon = new JLabel("T·ªìn: " + (tonGoc - 1));
		lblTon.setFont(new Font("Segoe UI", Font.PLAIN, 13));
		lblTon.setForeground(new Color(150, 0, 0));
		lblTon.setBounds(430, centerY + 12, 100, 25);
		lblTon.setName("lblTon");
		pnDon.add(lblTon);

		// ==== SL ====
		JPanel pnTangGiam = new JPanel(new BorderLayout(5, 0));
		pnTangGiam.setBounds(500, centerY, 137, 36);
		pnTangGiam.setBackground(new Color(0xF8FAFB));
		pnTangGiam.setBorder(new LineBorder(new Color(0xB0BEC5), 2, true));
		pnDon.add(pnTangGiam);

		JButton btnGiam = new JButton("‚àí");
		JButton btnTang = new JButton("+");
		JTextField txtSL = new JTextField("1");
		txtSL.setHorizontalAlignment(SwingConstants.CENTER);
		txtSL.setFont(new Font("Segoe UI", Font.BOLD, 16));
		txtSL.setBorder(null);
		txtSL.setName("txtSL");

		styleMiniButton(btnGiam);
		styleMiniButton(btnTang);
		pnTangGiam.add(btnGiam, BorderLayout.WEST);
		pnTangGiam.add(txtSL, BorderLayout.CENTER);
		pnTangGiam.add(btnTang, BorderLayout.EAST);

		// ==== GI√Å & T·ªîNG ====
		JLabel lblGia = new JLabel(String.format("%,.0f ƒë", sp.getGiaBan()));
		lblGia.setFont(new Font("Segoe UI", Font.PLAIN, 16));
		lblGia.setBounds(700, centerY, 120, 29);
		pnDon.add(lblGia);

		JLabel lblTong = new JLabel(String.format("%,.0f ƒë", sp.getGiaBan()));
		lblTong.setFont(new Font("Segoe UI", Font.BOLD, 18));
		lblTong.setBounds(850, centerY, 120, 29);
		lblTong.setName("lblTong");
		pnDon.add(lblTong);

		// ==== N√öT X√ìA ====
		JButton btnXoa = new JButton();
		btnXoa.setBounds(980, centerY, 35, 35);
		try {
			ImageIcon iconBin = new ImageIcon(getClass().getResource("/images/bin.png"));
			Image img = iconBin.getImage().getScaledInstance(20, 20, Image.SCALE_SMOOTH);
			btnXoa.setIcon(new ImageIcon(img));
		} catch (Exception ignored) {
		}
		btnXoa.setBorderPainted(false);
		btnXoa.setContentAreaFilled(false);
		btnXoa.setCursor(new Cursor(Cursor.HAND_CURSOR));
		pnDon.add(btnXoa);

		// ==== LOGIC TƒÇNG / GI·∫¢M ====
		// üîπ TƒÇNG S·ªê L∆Ø·ª¢NG
		btnTang.addActionListener(e -> {
			int total = pnDanhSachDon.getComponentCount();
			int currentIndex = -1;

			// X√°c ƒë·ªãnh v·ªã tr√≠ panel hi·ªán t·∫°i
			for (int i = 0; i < total; i++) {
				if (pnDanhSachDon.getComponent(i) == pnDon) {
					currentIndex = i;
					break;
				}
			}

			// N·∫øu kh√¥ng ph·∫£i panel cu·ªëi (l√¥ m·ªõi nh·∫•t) ‚Üí ch·∫∑n
			if (currentIndex != total - 1) {
				JOptionPane.showMessageDialog(pnDon,
						"Ch·ªâ ƒë∆∞·ª£c thao t√°c v·ªõi l√¥ m·ªõi nh·∫•t!\nVui l√≤ng ho√†n t·∫•t l√¥ hi·ªán t·∫°i tr∆∞·ªõc.", "R√†ng bu·ªôc th·ª© t·ª±",
						JOptionPane.WARNING_MESSAGE);
				return;
			}

			int sl = parse(txtSL.getText()) + 1;
			int tonBanDau = (int) pnDon.getClientProperty("tonGoc");

			// N·∫øu h·∫øt h√†ng trong l√¥ n√†y ‚Üí t·ª± chuy·ªÉn l√¥ k·∫ø ti·∫øp
			if (sl > tonBanDau) {
				LoSanPham loHienTai = loDAO.layLoTheoMa(maLo);
				LoSanPham loTiep = loDAO.layLoKeTiep(sp.getMaSanPham(), loHienTai.getHanSuDung());

				if (loTiep != null) {
					JOptionPane.showMessageDialog(pnDon,
							"L√¥ " + maLo + " ƒë√£ h·∫øt h√†ng!\nT·ª± ƒë·ªông chuy·ªÉn sang l√¥ " + loTiep.getMaLo(),
							"T·ª± ƒë·ªông ƒë·ªïi l√¥", JOptionPane.INFORMATION_MESSAGE);

					// T·∫°o panel m·ªõi cho l√¥ k·∫ø ti·∫øp
					pnDanhSachDon
							.add(createDonPanel(sp, loTiep.getMaLo(), loTiep.getHanSuDung(), loTiep.getSoLuongTon()));
					pnDanhSachDon.revalidate();
					pnDanhSachDon.repaint();
					capNhatTongTien(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn khi th√™m l√¥ m·ªõi
					return;
				} else {
					JOptionPane.showMessageDialog(pnDon, "T·∫•t c·∫£ c√°c l√¥ c·ªßa s·∫£n ph·∫©m n√†y ƒë√£ h·∫øt h√†ng!", "H·∫øt h√†ng",
							JOptionPane.WARNING_MESSAGE);
					return;
				}
			}

			// C·∫≠p nh·∫≠t khi v·∫´n c√≤n h√†ng
			txtSL.setText(String.valueOf(sl));
			lblTong.setText(String.format("%,.0f ƒë", sl * sp.getGiaBan()));
			lblTon.setText("T·ªìn: " + (tonBanDau - sl));
			capNhatTongTien(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn khi tƒÉng SL
		});

		// üîπ GI·∫¢M S·ªê L∆Ø·ª¢NG
		btnGiam.addActionListener(e -> {
			int total = pnDanhSachDon.getComponentCount();
			int currentIndex = -1;

			// X√°c ƒë·ªãnh v·ªã tr√≠ panel hi·ªán t·∫°i
			for (int i = 0; i < total; i++) {
				if (pnDanhSachDon.getComponent(i) == pnDon) {
					currentIndex = i;
					break;
				}
			}

			// N·∫øu kh√¥ng ph·∫£i panel cu·ªëi (m·ªõi nh·∫•t) ‚Üí ch·∫∑n
			if (currentIndex != total - 1) {
				JOptionPane.showMessageDialog(pnDon,
						"Ch·ªâ ƒë∆∞·ª£c thao t√°c v·ªõi l√¥ m·ªõi nh·∫•t!\nKh√¥ng th·ªÉ thay ƒë·ªïi l√¥ tr∆∞·ªõc ƒë√≥.", "R√†ng bu·ªôc th·ª© t·ª±",
						JOptionPane.WARNING_MESSAGE);
				return;
			}

			int sl = parse(txtSL.getText());
			int tonBanDau = (int) pnDon.getClientProperty("tonGoc");

			if (sl > 1) {
				sl--;
				txtSL.setText(String.valueOf(sl));
				lblTong.setText(String.format("%,.0f ƒë", sl * sp.getGiaBan()));
				lblTon.setText("T·ªìn: " + (tonBanDau - sl));
				capNhatTongTien(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn khi gi·∫£m SL
			}
		});

		// ==== X√ìA D√íNG (ch·ªâ cho xo√° l√¥ m·ªõi nh·∫•t) ====
		btnXoa.addActionListener(e -> {
			int total = pnDanhSachDon.getComponentCount();
			int currentIndex = -1;

			// T√¨m v·ªã tr√≠ panel hi·ªán t·∫°i trong danh s√°ch
			for (int i = 0; i < total; i++) {
				if (pnDanhSachDon.getComponent(i) == pnDon) {
					currentIndex = i;
					break;
				}
			}

			// N·∫øu kh√¥ng t√¨m th·∫•y th√¨ th√¥i
			if (currentIndex == -1)
				return;

			// Ch·ªâ cho ph√©p xo√° panel cu·ªëi c√πng (m·ªõi nh·∫•t)
			if (currentIndex != total - 1) {
				JOptionPane.showMessageDialog(pnDon,
						"Ch·ªâ c√≥ th·ªÉ xo√° l√¥ ƒë∆∞·ª£c th√™m sau c√πng (l√¥ m·ªõi nh·∫•t)!\n" + "Vui l√≤ng xo√° theo th·ª© t·ª± ng∆∞·ª£c l·∫°i.",
						"R√†ng bu·ªôc th·ª© t·ª± xo√°", JOptionPane.WARNING_MESSAGE);
				return;
			}

			// N·∫øu l√† panel cu·ªëi ‚Üí xo√° b√¨nh th∆∞·ªùng
			pnDanhSachDon.remove(pnDon);
			pnDanhSachDon.revalidate();
			pnDanhSachDon.repaint();
			capNhatTongTien(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn khi x√≥a
		});
		// üîπ NH·∫¨P S·ªê L∆Ø·ª¢NG B·∫∞NG TAY R·ªíI ·∫§N ENTER
		txtSL.addActionListener(e -> {
		    int sl = parse(txtSL.getText());
		    int tonBanDau = (int) pnDon.getClientProperty("tonGoc");

		    if (sl < 1) sl = 1;
		    if (sl > tonBanDau) {
		        JOptionPane.showMessageDialog(pnDon,
		            "S·ªë l∆∞·ª£ng v∆∞·ª£t qu√° t·ªìn kho (" + tonBanDau + "). T·ª± ƒë·ªông ƒëi·ªÅu ch·ªânh v·ªÅ m·ª©c t·ªëi ƒëa.",
		            "C·∫£nh b√°o", JOptionPane.WARNING_MESSAGE);
		        sl = tonBanDau;
		    }

		    txtSL.setText(String.valueOf(sl));
		    lblTong.setText(String.format("%,.0f ƒë", sl * sp.getGiaBan()));
		    lblTon.setText("T·ªìn: " + (tonBanDau - sl));
		    capNhatTongTien();
		});

		return pnDon;
		
	}

	private Component findByName(Container root, String name) {
		for (Component c : root.getComponents()) {
			if (name.equals(c.getName()))
				return c;
			if (c instanceof Container) {
				Component f = findByName((Container) c, name);
				if (f != null)
					return f;
			}
		}
		return null;
	}

	private void styleMiniButton(JButton btn) {
		btn.setFont(new Font("Segoe UI", Font.BOLD, 18));
		btn.setFocusPainted(false);
		btn.setBackground(new Color(0xE0F2F1));
		btn.setBorder(new LineBorder(new Color(0x80CBC4), 1, true));
		btn.setCursor(new Cursor(Cursor.HAND_CURSOR));
		btn.setOpaque(true);
		btn.setPreferredSize(new Dimension(40, 36));
	}

	private int parse(String s) {
		try {
			return Integer.parseInt(s.trim());
		} catch (Exception e) {
			return 0;
		}
	}

	/**
	 * T√≠nh t·ªïng ti·ªÅn h√†ng (ch∆∞a tr·ª´ KM) t·ª´ t·∫•t c·∫£ c√°c panel s·∫£n ph·∫©m.
	 */
	private void capNhatTongTien() {
		double tongHang = 0;

		for (Component comp : pnDanhSachDon.getComponents()) {
			if (comp instanceof JPanel pnDon) {
				try {
					// L·∫•y c√°c th√†nh ph·∫ßn c·∫ßn thi·∫øt
					JTextField txtSL = (JTextField) findByName(pnDon, "txtSL");

					// L·∫•y SanPham t·ª´ l√¥ (MaSP ƒë∆∞·ª£c l∆∞u trong LoSanPham)
					String maLo = (String) pnDon.getClientProperty("maLo");
					LoSanPham lo = loDAO.layLoTheoMa(maLo);

					if (txtSL != null && lo != null && lo.getSanPham() != null) {
						int sl = parse(txtSL.getText());
						double giaBan = lo.getSanPham().getGiaBan();
						tongHang += sl * giaBan;
					}
				} catch (Exception e) {
					System.err.println("L·ªói khi t√≠nh t·ªïng ti·ªÅn: " + e.getMessage());
				}
			}
		}

		// C·∫≠p nh·∫≠t c√°c label tr√™n giao di·ªán
		if (lblTongHangValue != null) {
			lblTongHangValue.setText(String.format("%,.0f ƒë", tongHang));
		}
		if (lblTongHDValue != null) {
			lblTongHDValue.setText(String.format("T·ªîNG C·ªòNG: %,.0f ƒê", tongHang));
		}

		// C·∫≠p nh·∫≠t Ti·ªÅn th·ª´a (Logic ph·ª©c t·∫°p h∆°n, t·∫°m th·ªùi 0)
		if (lblTienThuaValue != null) {
			// üí° C·∫ßn t√≠nh Ti·ªÅn kh√°ch ƒë∆∞a - T·ªïng h√≥a ƒë∆°n (Sau khi tr·ª´ KM n·∫øu c√≥)
			// T·∫°m th·ªùi set 0
			lblTienThuaValue.setText("0 ƒë");
		}
		if (lblTienThuaValue != null && txtTienKhach != null) {
			capNhatTienThuaDonGian();
		}
	}

	private void capNhatTienThuaDonGian() {
	    try {
	        // ‚úÖ 1. L·∫•y t·ªïng h√≥a ƒë∆°n (l·ªçc k√Ω t·ª± s·ªë)
	        String rawTong = lblTongHDValue.getText().replaceAll("[^0-9]", "");
	        double tong = rawTong.isEmpty() ? 0 : Double.parseDouble(rawTong);

	        // ‚úÖ 2. L·∫•y ti·ªÅn kh√°ch ƒë∆∞a (v√† ki·ªÉm tra r·ªóng / h·ª£p l·ªá)
	        String tienKhachStr = txtTienKhach.getText().trim();
	        if (tienKhachStr.isEmpty()) {
	            lblTienThuaValue.setForeground(Color.RED);
	            lblTienThuaValue.setText("Ch∆∞a nh·∫≠p ti·ªÅn kh√°ch");
	            return;
	        }

	        double tienKhach;
	        try {
	            tienKhach = Double.parseDouble(tienKhachStr);
	        } catch (NumberFormatException ex) {
	            lblTienThuaValue.setForeground(Color.RED);
	            lblTienThuaValue.setText("Sai ƒë·ªãnh d·∫°ng s·ªë");
	            JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá cho ti·ªÅn kh√°ch!", "L·ªói nh·∫≠p li·ªáu", JOptionPane.WARNING_MESSAGE);
	            return;
	        }

	        // ‚úÖ 3. T√≠nh v√† hi·ªÉn th·ªã ti·ªÅn th·ª´a
	        double tienThua = tienKhach - tong;
	        if (tienThua < 0) {
	            lblTienThuaValue.setForeground(Color.RED);
	            lblTienThuaValue.setText("C√≤n thi·∫øu " + String.format("%,.0f ƒë", -tienThua));
	        } else {
	            lblTienThuaValue.setForeground(new Color(0x00796B));
	            lblTienThuaValue.setText(String.format("%,.0f ƒë", tienThua));
	        }

	    } catch (Exception e) {
	        lblTienThuaValue.setForeground(Color.GRAY);
	        lblTienThuaValue.setText("0 ƒë");
	        System.err.println("‚ùå L·ªói khi t√≠nh ti·ªÅn th·ª´a: " + e.getMessage());
	    }
	}


	/** Panel b√™n ph·∫£i: kh√°ch h√†ng & thanh to√°n */
	private JPanel buildRightPanel() {
		// ... (Code kh·ªüi t·∫°o pnCotPhaiRight v√† th√¥ng tin Nh√¢n vi√™n/Th·ªùi gian) ...
		JPanel pnCotPhaiRight = new JPanel();
		pnCotPhaiRight.setPreferredSize(new Dimension(1920 - 383 - 1073, 1080));
		pnCotPhaiRight.setBackground(Color.WHITE);
		pnCotPhaiRight.setBorder(new EmptyBorder(20, 20, 20, 20)); // padding t·ªïng th·ªÉ
		pnCotPhaiRight.setLayout(new BoxLayout(pnCotPhaiRight, BoxLayout.Y_AXIS));

		// <<< KH·ªûI T·∫†O lblNhanVien >>>
		lblNhanVien = new JLabel();
		lblNhanVien.setFont(new Font("Segoe UI", Font.BOLD, 14));
		lblNhanVien.setName("lblNhanVien");

		// ==== T√äN NH√ÇN VI√äN & TH·ªúI GIAN ====
		JPanel pnNhanVien = new JPanel(new BorderLayout(5, 5));
		pnNhanVien.setMaximumSize(new Dimension(Integer.MAX_VALUE, 30));
		pnNhanVien.setOpaque(false);

		// L·∫•y th√¥ng tin nh√¢n vi√™n hi·ªán ƒëang ƒëƒÉng nh·∫≠p
		TaiKhoan tk = Session.getInstance().getTaiKhoanDangNhap();
		if (tk != null && tk.getNhanVien() != null) {
			NhanVien nv = tk.getNhanVien();
			lblNhanVien.setText("üë§ " + nv.getTenNhanVien() + " (" + nv.getCaLam() + ")");
		} else {
			lblNhanVien.setText("üë§ [Ch∆∞a ƒëƒÉng nh·∫≠p]");
		}

		JLabel lblThoiGian = new JLabel("", SwingConstants.RIGHT); // ‚Üê set th·ªùi gian hi·ªán t·∫°i
		lblThoiGian.setFont(new Font("Segoe UI", Font.PLAIN, 14));
		lblThoiGian.setName("lblThoiGian");

		pnNhanVien.add(lblNhanVien, BorderLayout.WEST);
		pnNhanVien.add(lblThoiGian, BorderLayout.EAST);
		pnCotPhaiRight.add(pnNhanVien);
		pnCotPhaiRight.add(Box.createVerticalStrut(10));

		// ===== ƒê∆Ø·ªúNG LINE NGAY D∆Ø·ªöI =====
		JSeparator lineNV = new JSeparator();
		lineNV.setForeground(new Color(200, 200, 200));
		lineNV.setMaximumSize(new Dimension(Integer.MAX_VALUE, 1));
		pnCotPhaiRight.add(Box.createVerticalStrut(4));
		pnCotPhaiRight.add(lineNV);
		pnCotPhaiRight.add(Box.createVerticalStrut(10));

		// ===== √î T√åM KH√ÅCH H√ÄNG =====
		JTextField txtTimKH = new JTextField();
		PlaceholderSupport.addPlaceholder(txtTimKH, "üîç Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i kh√°ch h√†ng");
		txtTimKH.setFont(new Font("Segoe UI", Font.PLAIN, 14));
		txtTimKH.setMaximumSize(new Dimension(Integer.MAX_VALUE, 35));
		txtTimKH.setBorder(new LineBorder(new Color(0x00C0E2), 2, true));
		pnCotPhaiRight.add(txtTimKH);
		pnCotPhaiRight.add(Box.createVerticalStrut(10));

		// --- KH·ªûI T·∫†O V√Ä HI·ªÇN TH·ªä T√äN KH√ÅCH H√ÄNG ---

		JPanel pnTenKH = new JPanel(new BorderLayout());
		pnTenKH.setOpaque(false);
		pnTenKH.setMaximumSize(new Dimension(Integer.MAX_VALUE, 28));

		JLabel lblTenKHLeft = new JLabel("T√™n kh√°ch h√†ng:");
		lblTenKHLeft.setFont(new Font("Segoe UI", Font.PLAIN, 14));

		JLabel lblTenKHValue = new JLabel("Kh√°ch l·∫ª"); // Gi√° tr·ªã m·∫∑c ƒë·ªãnh
		lblTenKHValue.setFont(new Font("Segoe UI", Font.BOLD, 14));
		lblTenKHValue.setForeground(new Color(0x00796B));

		pnTenKH.add(lblTenKHLeft, BorderLayout.WEST);
		pnTenKH.add(lblTenKHValue, BorderLayout.EAST);
		pnCotPhaiRight.add(pnTenKH);
		pnCotPhaiRight.add(Box.createVerticalStrut(15));

		// ===== S·ª∞ KI·ªÜN T√åM KH√ÅCH H√ÄNG (C·∫≠p nh·∫≠t khachHangHienTai) =====
		txtTimKH.addActionListener(e -> {
			String soDT = txtTimKH.getText().trim();
			if (soDT.isEmpty() || soDT.length() != 10 || !soDT.matches("0[0-9]{9}")) {
				JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i 10 ch·ªØ s·ªë h·ª£p l·ªá!");
				// üí° Reset v·ªÅ kh√°ch l·∫ª n·∫øu nh·∫≠p sai
				khachHangHienTai = new KhachHang("KH-0001", "Kh√°ch v√£ng lai", true, "0900000000",
						LocalDate.now().minusYears(18));
				lblTenKHValue.setText("Kh√°ch v√£ng lai");
				lblTenKHValue.setForeground(new Color(0x00796B));
				return;
			}

			KhachHang khTimThay = null;
			// Th·ª±c hi·ªán t√¨m ki·∫øm trong DAO
			// (B·∫°n n√™n c√≥ h√†m timTheoSDT() trong KhachHang_DAO ƒë·ªÉ t·ªëi ∆∞u)
			for (KhachHang kh : khachHangDAO.getAllKhachHang()) {
				if (kh.getSoDienThoai() != null && kh.getSoDienThoai().equals(soDT)) {
					khTimThay = kh;
					break;
				}
			}

			if (khTimThay != null) {
				khachHangHienTai = khTimThay; // üí° G√°n kh√°ch h√†ng t√¨m th·∫•y
				lblTenKHValue.setText(khTimThay.getTenKhachHang());
				lblTenKHValue.setForeground(new Color(0x00796B));
			} else {
				khachHangHienTai = new KhachHang("KH-0001", "Kh√°ch v√£ng lai", true, "0900000000",
						LocalDate.now().minusYears(18)); // üí° Reset v·ªÅ kh√°ch l·∫ª
				lblTenKHValue.setText("‚Äî");
				lblTenKHValue.setForeground(Color.GRAY);

				int confirm = JOptionPane.showConfirmDialog(this,
						"Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng c√≥ s·ªë: " + soDT + "\nB·∫°n c√≥ mu·ªën th√™m kh√°ch h√†ng m·ªõi kh√¥ng?",
						"Kh√¥ng t√¨m th·∫•y", JOptionPane.YES_NO_OPTION);

				if (confirm == JOptionPane.YES_OPTION) {
					JOptionPane.showMessageDialog(this, "üëâ T√≠nh nƒÉng th√™m kh√°ch h√†ng m·ªõi s·∫Ω ƒë∆∞·ª£c b·ªï sung sau.");
				}
			}
		});

		// --- KHU V·ª∞C TH√îNG TIN H√ìA ƒê∆†N ---

		// ... (Code hi·ªÉn th·ªã T·ªïng ti·ªÅn h√†ng, Gi·∫£m gi√°) ...
		JPanel pnTongHang = new JPanel(new BorderLayout());
		pnTongHang.setOpaque(false);
		pnTongHang.setMaximumSize(new Dimension(Integer.MAX_VALUE, 25));

		JLabel lblTongHangLeft = new JLabel("T·ªïng ti·ªÅn h√†ng:");
		lblTongHangLeft.setFont(new Font("Segoe UI", Font.PLAIN, 14));

		lblTongHangValue = new JLabel("0 ƒë");
		lblTongHangValue.setFont(new Font("Segoe UI", Font.PLAIN, 14));
		lblTongHangValue.setHorizontalAlignment(SwingConstants.RIGHT);

		pnTongHang.add(lblTongHangLeft, BorderLayout.WEST);
		pnTongHang.add(lblTongHangValue, BorderLayout.EAST);
		pnCotPhaiRight.add(pnTongHang);

		pnCotPhaiRight.add(makeLabel("Gi·∫£m gi√° s·∫£n ph·∫©m:", "0 ƒë")); // lblGiamSP
		pnCotPhaiRight.add(makeLabel("Gi·∫£m gi√° h√≥a ƒë∆°n:", "0 ƒë")); // lblGiamHD

		JPanel pnMGG = new JPanel(new BorderLayout(5, 5));
		pnMGG.setOpaque(false);
		pnMGG.setMaximumSize(new Dimension(Integer.MAX_VALUE, 30));

		JLabel lblGiamPhanTram = new JLabel("‚Äî"); // Gi√° tr·ªã m·∫∑c ƒë·ªãnh
		lblGiamPhanTram.setForeground(Color.RED);
		lblGiamPhanTram.setFont(new Font("Segoe UI", Font.BOLD, 13));
		pnMGG.add(lblGiamPhanTram, BorderLayout.WEST);

		pnCotPhaiRight.add(pnMGG);
		pnCotPhaiRight.add(Box.createVerticalStrut(10));

		// T·ªïng h√≥a ƒë∆°n
		JPanel pnTongTien = new JPanel(new BorderLayout());
		pnTongTien.setOpaque(false);
		pnTongTien.setMaximumSize(new Dimension(Integer.MAX_VALUE, 30));

		lblTongHDValue = new JLabel("T·ªîNG C·ªòNG: 0 ƒê");
		lblTongHDValue.setFont(new Font("Segoe UI", Font.BOLD, 16));
		lblTongHDValue.setHorizontalAlignment(SwingConstants.RIGHT);
		pnTongTien.add(lblTongHDValue, BorderLayout.WEST);

		pnCotPhaiRight.add(pnTongTien);
		pnCotPhaiRight.add(Box.createVerticalStrut(10));

		// √î nh·∫≠p ti·ªÅn kh√°ch ƒë∆∞a
		JPanel pnTienKhach = new JPanel(new BorderLayout(8, 0));
		pnTienKhach.setMaximumSize(new Dimension(Integer.MAX_VALUE, 40));
		pnTienKhach.setOpaque(false);

		JLabel lblTienKhach = new JLabel("Ti·ªÅn kh√°ch ƒë∆∞a:");
		lblTienKhach.setFont(new Font("Segoe UI", Font.PLAIN, 14));

		txtTienKhach = new JTextField(); // üí° G√°n v√†o thu·ªôc t√≠nh ƒë·ªÉ truy c·∫≠p sau
		txtTienKhach.setFont(new Font("Segoe UI", Font.BOLD, 16));
		txtTienKhach.setHorizontalAlignment(SwingConstants.RIGHT);
		txtTienKhach.setBorder(BorderFactory.createCompoundBorder(new LineBorder(new Color(0x00C0E2), 2, true),
				new EmptyBorder(5, 10, 5, 10)));
		txtTienKhach.setBackground(new Color(0xF0FAFA));
		txtTienKhach.setForeground(new Color(0x00796B));
		txtTienKhach.setName("txtTienKhach");
		txtTienKhach.addActionListener(e -> capNhatTienThuaDonGian());

		pnTienKhach.add(lblTienKhach, BorderLayout.WEST);
		pnTienKhach.add(txtTienKhach, BorderLayout.CENTER);
		pnCotPhaiRight.add(pnTienKhach);
		pnCotPhaiRight.add(Box.createVerticalStrut(10));

		// Label Ti·ªÅn th·ª´a
		JPanel pnTienThua = new JPanel(new BorderLayout());
		pnTienThua.setOpaque(false);
		pnTienThua.setMaximumSize(new Dimension(Integer.MAX_VALUE, 25));

		JLabel lblTienThuaLeft = new JLabel("Ti·ªÅn th·ª´a:");
		lblTienThuaLeft.setFont(new Font("Segoe UI", Font.PLAIN, 14));

		lblTienThuaValue = new JLabel("0 ƒë");
		lblTienThuaValue.setFont(new Font("Segoe UI", Font.PLAIN, 14));
		lblTienThuaValue.setHorizontalAlignment(SwingConstants.RIGHT);

		pnTienThua.add(lblTienThuaLeft, BorderLayout.WEST);
		pnTienThua.add(lblTienThuaValue, BorderLayout.EAST);
		pnCotPhaiRight.add(pnTienThua);

		// ====== N√öT B√ÅN H√ÄNG ======
		pnCotPhaiRight.add(Box.createVerticalGlue());

		JButton btnBanHang = new PillButton("B√°n h√†ng");
		btnBanHang.setFont(new Font("Segoe UI", Font.BOLD, 20));
		btnBanHang.setAlignmentX(Component.CENTER_ALIGNMENT);

		btnBanHang.addActionListener(e -> xuLyBanHang()); // üí° G√°n s·ª± ki·ªán B√°n h√†ng

		pnCotPhaiRight.add(btnBanHang);
		pnCotPhaiRight.add(Box.createVerticalStrut(10));

		capNhatTongTien();

		return pnCotPhaiRight;
	}

	private JPanel makeLabel(String left, String right) {
		// ... (H√†m makeLabel gi·ªØ nguy√™n) ...
		JPanel pn = new JPanel(new BorderLayout());
		pn.setOpaque(false);
		pn.setMaximumSize(new Dimension(Integer.MAX_VALUE, 25));

		JLabel l = new JLabel(left);
		l.setFont(new Font("Segoe UI", Font.PLAIN, 14));

		JLabel r = new JLabel(right);
		r.setFont(new Font("Segoe UI", Font.PLAIN, 14));
		r.setHorizontalAlignment(SwingConstants.RIGHT);

		pn.add(l, BorderLayout.WEST);
		pn.add(r, BorderLayout.EAST);

		return pn;
	}

	// üí° H√ÄM X·ª¨ L√ù S·ª∞ KI·ªÜN B√ÅN H√ÄNG
	private void xuLyBanHang() {
		// --- KI·ªÇM TRA DANH S√ÅCH S·∫¢N PH·∫®M ---
		if (pnDanhSachDon.getComponentCount() == 0) {
			JOptionPane.showMessageDialog(this, "Vui l√≤ng th√™m s·∫£n ph·∫©m v√†o h√≥a ƒë∆°n!", "Thi·∫øu s·∫£n ph·∫©m",
					JOptionPane.WARNING_MESSAGE);
			return;
		}

		// --- KI·ªÇM TRA TI·ªÄN KH√ÅCH ---
		double tong = 0, tienKhach = 0;
		try {
			String raw = lblTongHDValue.getText().replaceAll("[^0-9]", "");
			if (!raw.isEmpty())
				tong = Double.parseDouble(raw);
			tienKhach = Double.parseDouble(txtTienKhach.getText().trim());
		} catch (Exception e) {
			JOptionPane.showMessageDialog(this, "Vui l√≤ng nh·∫≠p ti·ªÅn kh√°ch ƒë∆∞a h·ª£p l·ªá!", "Thi·∫øu d·ªØ li·ªáu",
					JOptionPane.WARNING_MESSAGE);
			return;
		}

		if (tienKhach < tong) {
			JOptionPane.showMessageDialog(this,
					"Kh√°ch h√†ng ch∆∞a ƒë∆∞a ƒë·ªß ti·ªÅn!\nC√≤n thi·∫øu: " + String.format("%,.0f ƒë", (tong - tienKhach)),
					"Thi·∫øu ti·ªÅn", JOptionPane.ERROR_MESSAGE);
			return;
		}
		// 1. KI·ªÇM TRA D·ªÆ LI·ªÜU
		if (pnDanhSachDon.getComponentCount() == 0) {
			JOptionPane.showMessageDialog(this, "Vui l√≤ng th√™m s·∫£n ph·∫©m v√†o h√≥a ƒë∆°n!", "L·ªói",
					JOptionPane.ERROR_MESSAGE);
			return;
		}

		// 2. L·∫§Y D·ªÆ LI·ªÜU C·∫¶N THI·∫æT
		TaiKhoan tk = Session.getInstance().getTaiKhoanDangNhap();
		// L·∫•y th√¥ng tin nh√¢n vi√™n (d√πng NV t·∫°m n·∫øu kh√¥ng c√≥ Session)
		NhanVien nv = tk != null && tk.getNhanVien() != null ? tk.getNhanVien()
				: new NhanVien("NV9999999999", "Nh√¢n vi√™n b√°n h√†ng", "SANG", true);

		// 3. T·∫†O V√Ä L∆ØU H√ìA ƒê∆†N
		String maHD = hoaDonDAO.taoMaHoaDon(); // D√πng DAO ƒë·ªÉ t·∫°o m√£ HD

		HoaDon hd = new HoaDon(maHD, khachHangHienTai.getMaKhachHang(), // üí° D√πng Kh√°ch h√†ng ƒë√£ ch·ªçn
				LocalDate.now(), nv, null, // KhuyenMai (ch∆∞a x·ª≠ l√Ω)
				false // thuocTheoDon (ch∆∞a x·ª≠ l√Ω)
		);

		// 4. DUY·ªÜT C√ÅC PANEL ƒê·ªÇ T·∫†O CHI TI·∫æT (L∆ØU K√àM MA L√î)
		List<ChiTietHoaDon> danhSachChiTiet = new ArrayList<>();

		for (Component comp : pnDanhSachDon.getComponents()) {
			if (!(comp instanceof JPanel pnDon))
				continue;

			try {
				String maLo = (String) pnDon.getClientProperty("maLo");
				JTextField txtSL = (JTextField) findByName(pnDon, "txtSL");
				int sl = parse(txtSL.getText());

				LoSanPham lo = loDAO.layLoTheoMa(maLo);

				if (lo == null || lo.getSanPham() == null || sl <= 0)
					continue;

				// T·∫°o ChiTietHoaDon
				ChiTietHoaDon cthd = new ChiTietHoaDon(hd, lo, // üí° Truy·ªÅn LoSanPham ƒë·∫ßy ƒë·ªß
						sl, lo.getSanPham().getGiaBan(), null);

				danhSachChiTiet.add(cthd);

			} catch (Exception e) {
				System.err.println("L·ªói khi t·∫°o ChiTietHoaDon: " + e.getMessage());
				JOptionPane.showMessageDialog(this, "L·ªói t·∫°o chi ti·∫øt h√≥a ƒë∆°n!", "L·ªói", JOptionPane.ERROR_MESSAGE);
				return;
			}
		}

		hd.setChiTietHoaDonList(danhSachChiTiet);

		// 5. L∆ØU D·ªÆ LI·ªÜU V√Ä C·∫¨P NH·∫¨T T·ªíN KHO
		if (hoaDonDAO.themHoaDon(hd)) { // D√πng h√†m ƒë√£ c√≥ Transaction

			// 5.1 C·∫¨P NH·∫¨T T·ªíN KHO
			if (capNhatTonKho(danhSachChiTiet)) {
				JOptionPane.showMessageDialog(this, "B√°n h√†ng th√†nh c√¥ng! M√£ HD: " + maHD, "Th√†nh c√¥ng",
						JOptionPane.INFORMATION_MESSAGE);
			} else {
				JOptionPane.showMessageDialog(this,
						"B√°n h√†ng th√†nh c√¥ng nh∆∞ng C·∫¨P NH·∫¨T T·ªíN KHO TH·∫§T B·∫†I. C·∫ßn ki·ªÉm tra l·∫°i t·ªìn kho th·ªß c√¥ng!",
						"C·∫£nh b√°o", JOptionPane.WARNING_MESSAGE);
			}

			// 5.2 D·ªçn d·∫πp giao di·ªán
			pnDanhSachDon.removeAll();
			pnDanhSachDon.revalidate();
			pnDanhSachDon.repaint();
			capNhatTongTien();

		} else {
		    JOptionPane.showMessageDialog(this,
		        "L∆∞u h√≥a ƒë∆°n th·∫•t b·∫°i! Vui l√≤ng ki·ªÉm tra Log/K·∫øt n·ªëi DB.",
		        "L·ªói", JOptionPane.ERROR_MESSAGE);
		    return; // ‚ùå Tho√°t, kh√¥ng reset
		}

		// ‚úÖ Ch·ªâ reset n·∫øu th√™m h√≥a ƒë∆°n th√†nh c√¥ng
		resetFormSauBanHang();

	}

	/**
	 * C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng t·ªìn c·ªßa c√°c l√¥ s·∫£n ph·∫©m ƒë√£ b√°n trong DB.
	 * 
	 * @param chiTietHoaDonList danh s√°ch chi ti·∫øt h√≥a ƒë∆°n
	 * @return true n·∫øu t·∫•t c·∫£ l√¥ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng
	 */
	private boolean capNhatTonKho(List<ChiTietHoaDon> chiTietHoaDonList) {
		boolean allSuccess = true;
		for (ChiTietHoaDon cthd : chiTietHoaDonList) {
			try {
				LoSanPham loCanCapNhat = cthd.getLoSanPham();
				int slBan = (int) cthd.getSoLuong();

				// T·∫£i l·∫°i ƒë·ªëi t∆∞·ª£ng l√¥ t·ª´ DB ƒë·ªÉ ƒë·∫£m b·∫£o d·ªØ li·ªáu m·ªõi nh·∫•t
				LoSanPham loHienTai = loDAO.layLoTheoMa(loCanCapNhat.getMaLo());

				if (loHienTai != null) {
					int tonMoi = loHienTai.getSoLuongTon() - slBan;

					if (tonMoi < 0) {
						System.err.println(
								"L·ªói: S·ªë l∆∞·ª£ng t·ªìn kho l√¥ " + loHienTai.getMaLo() + " b·ªã √¢m! (" + tonMoi + ")");
						allSuccess = false;
						continue;
					}

					loHienTai.setSoLuongTon(tonMoi);
					if (!loDAO.capNhatLoSanPham(loHienTai)) {
						allSuccess = false;
						System.err.println("L·ªói DB khi c·∫≠p nh·∫≠t l√¥: " + loHienTai.getMaLo());
					}
				} else {
					System.err
							.println("L·ªói: Kh√¥ng t√¨m th·∫•y l√¥ s·∫£n ph·∫©m ƒë·ªÉ c·∫≠p nh·∫≠t t·ªìn kho: " + loCanCapNhat.getMaLo());
					allSuccess = false;
				}
			} catch (Exception e) {
				e.printStackTrace();
				allSuccess = false;
			}
		}
		return allSuccess;
	}

	/** üßπ Reset to√†n b·ªô form sau khi b√°n h√†ng th√†nh c√¥ng */
	private void resetFormSauBanHang() {
		// 1. X√≥a danh s√°ch s·∫£n ph·∫©m
		pnDanhSachDon.removeAll();
		pnDanhSachDon.revalidate();
		pnDanhSachDon.repaint();

		// 2. Reset th√¥ng tin kh√°ch h√†ng
		khachHangHienTai = new KhachHang("KH-0001", "Kh√°ch v√£ng lai", true, "0900000000",
				LocalDate.now().minusYears(18));

		// N·∫øu c√≥ TextField t√¨m KH ho·∫∑c label hi·ªÉn th·ªã t√™n KH, reset n√≥ (t√¨m b·∫±ng t√™n
		// n·∫øu ch∆∞a c√≥ tham chi·∫øu)
		Component compTimKH = findByName(this, "txtTimKH");
		if (compTimKH instanceof JTextField txtTimKH) {
			txtTimKH.setText("");
		}
		Component compTenKH = findByName(this, "lblTenKHValue");
		if (compTenKH instanceof JLabel lblTenKH) {
			lblTenKH.setText("Kh√°ch l·∫ª");
			lblTenKH.setForeground(new Color(0x00796B));
		}

		// 3. Reset ti·ªÅn kh√°ch & t·ªïng ti·ªÅn
		if (txtTienKhach != null)
			txtTienKhach.setText("");
		if (lblTienThuaValue != null) {
			lblTienThuaValue.setText("0 ƒë");
			lblTienThuaValue.setForeground(Color.GRAY);
		}
		if (lblTongHangValue != null)
			lblTongHangValue.setText("0 ƒë");
		if (lblTongHDValue != null)
			lblTongHDValue.setText("T·ªîNG C·ªòNG: 0 ƒê");
		
		// 4. L√†m s·∫°ch d·ªØ li·ªáu kh√°c n·∫øu c√≥
		capNhatTongTien(); // ƒê·∫£m b·∫£o sync l·∫°i giao di·ªán
	}

	public static void main(String[] args) {
		SwingUtilities.invokeLater(() -> {
			JFrame f = new JFrame("B√°n H√†ng - L√¥ & T·ªìn c·ªë ƒë·ªãnh");
			f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			f.setSize(1280, 800);
			f.setLocationRelativeTo(null);
			f.setContentPane(new BanHang_GUI());
			f.setVisible(true);
		});
	}
}