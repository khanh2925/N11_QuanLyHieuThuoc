package entity;

import java.util.Objects;

public class ChiTietHoaDon {

    private HoaDon hoaDon;
    private LoSanPham loSanPham; 
    private double soLuong;
    private double giaBan;
    private KhuyenMai khuyenMai;

    public ChiTietHoaDon() {}

    // Constructor ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t ƒë·ªÉ d√πng LoSanPham thay v√¨ SanPham
    public ChiTietHoaDon(HoaDon hoaDon, LoSanPham loSanPham, double soLuong, double giaBan, KhuyenMai khuyenMai) {
        setHoaDon(hoaDon);
        setLoSanPham(loSanPham); // üí° D√πng LoSanPham
        setSoLuong(soLuong);
        setGiaBan(giaBan);
        setKhuyenMai(khuyenMai);
    }

    public ChiTietHoaDon(ChiTietHoaDon other) {
        this.hoaDon = other.hoaDon;
        this.loSanPham = other.loSanPham; // üí° D√πng LoSanPham
        this.soLuong = other.soLuong;
        this.giaBan = other.giaBan;
        this.khuyenMai = other.khuyenMai;
    }

    // üîπ Th√†nh ti·ªÅn d·∫´n xu·∫•t (GI·ªÆ NGUY√äN)
    public double getThanhTien() {
        double thanhTienChuaGiam = this.soLuong * this.giaBan;

        if (khuyenMai == null) return thanhTienChuaGiam;

        // N·∫øu khuy·∫øn m√£i l√† lo·∫°i h√≥a ƒë∆°n ‚Üí b·ªè qua (ch·ªâ √°p ·ªü t·ªïng h√≥a ƒë∆°n)
        if (khuyenMai.isKhuyenMaiHoaDon()) return thanhTienChuaGiam;
        double giam = 0;
        switch (khuyenMai.getHinhThuc()) {
            case GIAM_GIA_PHAN_TRAM:
                giam = thanhTienChuaGiam * (khuyenMai.getGiaTri() / 100.0);
                break;
            case GIAM_GIA_TIEN:
                giam = khuyenMai.getGiaTri();
                break;
            case TANG_THEM:
                // N·∫øu ƒë·ªß ƒëi·ªÅu ki·ªán th√¨ c·ªông th√™m s·∫£n ph·∫©m, nh∆∞ng kh√¥ng thay ƒë·ªïi ti·ªÅn
                giam = 0;
                break;
            default:
                giam = 0;
                break;
        }

        double thanhTienSauGiam = thanhTienChuaGiam - giam;
        return Math.max(0, thanhTienSauGiam);
    }

    // ===== GETTERS / SETTERS =====
    public HoaDon getHoaDon() { return hoaDon; }
    public void setHoaDon(HoaDon hoaDon) {
        if (hoaDon == null) throw new IllegalArgumentException("H√≥a ƒë∆°n kh√¥ng ƒë∆∞·ª£c null.");
        this.hoaDon = hoaDon;
    }

    // üí° GETTER/SETTER CHO LO SAN PHAM (THAY TH·∫æ SanPham)
    public LoSanPham getLoSanPham() { return loSanPham; }
    public void setLoSanPham(LoSanPham loSanPham) {
        if (loSanPham == null) throw new IllegalArgumentException("L√¥ s·∫£n ph·∫©m kh√¥ng ƒë∆∞·ª£c null.");
        this.loSanPham = loSanPham;
    }

    // üí° PH∆Ø∆†NG TH·ª®C H·ªñ TR·ª¢ ƒê·ªÇ GI·ªÆ C√ÅC H√ÄM C≈® KH√îNG B·ªä L·ªñI BI√äN D·ªäCH
    // V√ç D·ª§: N·∫øu ph∆∞∆°ng th·ª©c c≈© g·ªçi cthd.getSanPham().getMaSanPham()
    public SanPham getSanPham() { 
        return loSanPham != null ? loSanPham.getSanPham() : null;
    }
    // H·ªßy setSanPham v√¨ kh√¥ng c·∫ßn thi·∫øt sau khi ƒë√£ c√≥ setLoSanPham
    public void setSanPham(SanPham sanPham) {
        if (sanPham == null) throw new IllegalArgumentException("S·∫£n ph·∫©m kh√¥ng ƒë∆∞·ª£c null.");
        // B·∫Øt bu·ªôc ph·∫£i t·∫°o LoSanPham n·∫øu d√πng h√†m n√†y:
        // throw new UnsupportedOperationException("S·ª≠ d·ª•ng setLoSanPham thay v√¨ setSanPham.");
    }
    

    public double getSoLuong() { return soLuong; }
    public void setSoLuong(double soLuong) {
        if (soLuong <= 0) throw new IllegalArgumentException("S·ªë l∆∞·ª£ng ph·∫£i > 0.");
        this.soLuong = soLuong;
    }

    public double getGiaBan() { return giaBan; }
    public void setGiaBan(double giaBan) {
        if (giaBan <= 0) throw new IllegalArgumentException("Gi√° b√°n ph·∫£i > 0.");
        this.giaBan = giaBan;
    }

    public KhuyenMai getKhuyenMai() { return khuyenMai; }
    public void setKhuyenMai(KhuyenMai khuyenMai) {
        // üîπ N·∫øu khuy·∫øn m√£i theo h√≥a ƒë∆°n ‚Üí kh√¥ng ƒë∆∞·ª£c g√°n cho chi ti·∫øt
        if (khuyenMai != null && khuyenMai.isKhuyenMaiHoaDon()) {
            throw new IllegalArgumentException("Kh√¥ng th·ªÉ g√°n khuy·∫øn m√£i h√≥a ƒë∆°n cho chi ti·∫øt s·∫£n ph·∫©m.");
        }
        this.khuyenMai = khuyenMai;
    }

    // üí° GI·ªÆ NGUY√äN PH∆Ø∆†NG TH·ª®C N√ÄY
    @Override
    public String toString() {
        return String.format("CTHD[%s - %s] SL=%.0f, Gi√°=%.0f, Th√†nh ti·ªÅn=%.0f%s",
                hoaDon != null ? hoaDon.getMaHoaDon() : "N/A",
                getSanPham() != null ? getSanPham().getTenSanPham() : "N/A",
                soLuong, giaBan, getThanhTien(),
                khuyenMai != null ? ", KM=" + khuyenMai.getHinhThuc() : "");
    }

    // üí° GI·ªÆ NGUY√äN PH∆Ø∆†NG TH·ª®C N√ÄY (ƒê√£ s·ª≠a l·∫°i logic ƒë·ªÉ d√πng LoSanPham)
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ChiTietHoaDon)) return false;
        ChiTietHoaDon that = (ChiTietHoaDon) o;
        // D√πng LoSanPham thay v√¨ SanPham ƒë·ªÉ x√°c ƒë·ªãnh s·ª± b·∫±ng nhau
        return Objects.equals(hoaDon, that.hoaDon) && Objects.equals(loSanPham, that.loSanPham);
    }

    // üí° GI·ªÆ NGUY√äN PH∆Ø∆†NG TH·ª®C N√ÄY (ƒê√£ s·ª≠a l·∫°i logic ƒë·ªÉ d√πng LoSanPham)
    @Override
    public int hashCode() {
        return Objects.hash(hoaDon, loSanPham);
    }
}